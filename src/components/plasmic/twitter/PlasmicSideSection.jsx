// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cmxbiR2DDRv5pf3jozTs35
// Component: SDjD8p4xQ4sE
import * as React from "react"
import { Link } from "gatsby"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
} from "@plasmicapp/react-web"
import Trend from "../../Trend" // plasmic-import: YgSl-_C-qO67/component
import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_twitter.module.css" // plasmic-import: cmxbiR2DDRv5pf3jozTs35/projectcss
import * as sty from "./PlasmicSideSection.module.css" // plasmic-import: SDjD8p4xQ4sE/css

export const PlasmicSideSection__VariantProps = new Array()

export const PlasmicSideSection__ArgProps = new Array("children", "slot")

function PlasmicSideSection__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        defaultcss.all,
        projectcss.all,
        projectcss.root_reset,
        sty.root
      )}
    >
      <div
        className={classNames(
          defaultcss.all,
          projectcss.all,
          sty.freeBox__rtlq9
        )}
      >
        <div
          className={classNames(
            defaultcss.all,
            projectcss.all,
            sty.freeBox__lDj5B
          )}
        >
          {p.renderPlasmicSlot({
            defaultContents: "What's happening",
            value: args.children,
            className: classNames(sty.slotTargetChildren),
          })}
        </div>
      </div>

      <div
        className={classNames(
          defaultcss.all,
          projectcss.all,
          sty.freeBox__hb5KK
        )}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <Trend
                className={classNames("__wab_instance", sty.trend__ujhOn)}
              />

              <Trend
                className={classNames("__wab_instance", sty.trend__wNzBa)}
              />
            </React.Fragment>
          ),

          value: args.slot,
        })}
      </div>

      <p.PlasmicLink
        data-plasmic-name={"link"}
        data-plasmic-override={overrides.link}
        className={classNames(
          defaultcss.a,
          projectcss.a,
          defaultcss.__wab_text,
          sty.link
        )}
        component={Link}
        href={"#"}
        platform={"gatsby"}
      >
        {"Show more"}
      </p.PlasmicLink>
    </div>
  )
}

const PlasmicDescendants = {
  root: ["root", "link"],
  link: ["link"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSideSection__ArgProps,
      internalVariantPropNames: PlasmicSideSection__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicSideSection__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicSideSection"
  } else {
    func.displayName = `PlasmicSideSection.${nodeName}`
  }
  return func
}

export const PlasmicSideSection = Object.assign(
  // Top-level PlasmicSideSection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    link: makeNodeComponent("link"),
    // Metadata about props expected for PlasmicSideSection
    internalVariantProps: PlasmicSideSection__VariantProps,
    internalArgProps: PlasmicSideSection__ArgProps,
  }
)

export default PlasmicSideSection
/* prettier-ignore-end */
